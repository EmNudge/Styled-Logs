'use strict';class StyledLog{constructor(){this.styles={},this.dom=[],this.logStr="",this.alias={br:"\n"}}html(...a){return this.dom=this._getArrFromHTML(...a),this}css(...a){return this.styles=this._getObjFromCSS(...a),this}log(){const a=this.dom.reduce((a,b)=>"string"==typeof b?a+b:this.alias[b.tag]?a+`%c${this.alias[b.tag]}%c`:a+`%c${b.text}%c`),b=this.dom.filter(a=>"object"==typeof a).map(a=>a.className),c=b.flatMap(a=>[this.styles[a],""]);console.log(a,...c)}_getArrFromHTML(...a){const b=String.raw(a[0],...a.slice(1));let c="",d=[];for(const[e,f]of b.split("").entries()){if("<"===f&&c.length&&!c.includes("<")){d.push(c.replace(/\n/g,"").trimLeft()),c="<";continue}c+=f,e===b.length-1&&d.push(c.replace(/\n/g,"").trimLeft());const a=/<s*div[^>]*>(.*?)<s*\/s*divs*>/,g=/<s*.+s*\/s*>/,h=-1<c.search(a),i=-1<c.search(g);if(h||i){const a=/class=".*"/,b=c.match(a)?c.match(a)[0].slice(7,-1):"",e=/<s*.*?(?=\/| )/,f=c.match(e)[0],g=f.slice(f.includes(" ")?f.lastIndexOf(" ")+1:1),h=/>.*</,i=c.match(h)?c.match(h)[0].slice(1,-1):"";d.push({text:i,className:b,tag:g}),c=""}}return d}_getObjFromCSS(...a){const b=String.raw(a[0],...a.slice(1)).split("}"),c={};for(const d of b){const a=d.slice(0,d.indexOf("{")).trim().slice(1);if(!a.length)continue;const b=d.slice(d.indexOf("{")+1).trim();c[a]=b}return c}}module.exports=StyledLog;
